{"version":3,"sources":["store/actionsTypes.js","store/reducer.js","store/moviesStore.js","store/MoviesProvider.jsx","components/NominationItem.jsx","containers/NominationContainer.jsx","hooks/useFetch.js","components/SearchInput.jsx","components/SkeletonLoader.jsx","components/MovieCard.jsx","components/ResultList.jsx","containers/SearchList.jsx","App.jsx","index.jsx"],"names":["reducer","state","action","type","actionsTypes","isLoading","payload","movies","nominationList","length","filter","movie","imdbID","INIT_STATE","MoviesStore","createContext","MoviesProvider","children","useReducer","dispatch","Provider","value","useStyles","makeStyles","root","display","cover","width","height","NominationItem","classes","useContext","Card","className","Grid","container","item","xs","CardContent","Typography","component","Title","IconButton","margin","onClick","fontSize","CardMedia","image","Poster","title","defaultProps","Year","Type","div","textAlign","fontFamily","animation","h1","opacity","transform","NominationContainer","spacing","map","useFetch","searchWord","useCallback","setLoading","axios","get","then","data","Search","catch","err","finally","theme","SearchInput","useState","input","setInput","searchMovie","useEffect","fetchSearchResults","debounce","cancel","noValidate","autoComplete","onSubmit","e","preventDefault","TextField","id","label","variant","onChange","target","Button","color","style","SkeletonLoader","loaders","index","push","maxWidth","MovieCard","imdbIDs","m","CardActionArea","alt","gutterBottom","CardActions","size","includes","flexWrap","ResultList","SearchList","App","Container","md","sm","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.04361db4.chunk.js","sourcesContent":["export default {\n  SET_LOADING: 'SET_LOADING',\n  SET_MOVIES: 'SET_MOVIES',\n  ADD_TO_NOMINATION: 'ADD_TO_NOMINATION',\n  REMOVE_FROM_NOMINATION: 'REMOVE_FROM_NOMINATION',\n};\n","import actionsTypes from './actionsTypes';\n\nconst MAX_NOMINATED = 5;\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case actionsTypes.SET_LOADING:\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n\n    case actionsTypes.SET_MOVIES:\n      return {\n        ...state,\n        movies: action.payload ?? [],\n      };\n\n    case actionsTypes.ADD_TO_NOMINATION:\n      if (state.nominationList?.length >= MAX_NOMINATED) {\n        return state;\n      }\n      return {\n        ...state,\n        nominationList: [...state.nominationList, action.payload],\n      };\n\n    case actionsTypes.REMOVE_FROM_NOMINATION:\n      return {\n        ...state,\n        nominationList: state.nominationList?.filter(\n          (movie) => movie.imdbID !== action.payload\n        ),\n      };\n    default:\n      return state;\n  }\n}\n\nexport default reducer;\n","import { createContext } from 'react';\n\nexport const INIT_STATE = {\n  isLoading: false,\n  movies: [],\n  nominationList: [],\n};\n\nconst MoviesStore = createContext(INIT_STATE);\n\nexport default MoviesStore;\n","import React, { useReducer } from 'react';\nimport PropTypes from 'prop-types';\nimport reducer from './reducer';\nimport MoviesStore, { INIT_STATE } from './moviesStore';\n\nconst MoviesProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, INIT_STATE);\n\n  return (\n    <MoviesStore.Provider value={{ state, dispatch }}>\n      {children}\n    </MoviesStore.Provider>\n  );\n};\n\nMoviesProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default MoviesProvider;\n","import React, { useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport DeleteIcon from '@material-ui/icons/Delete';\n// import CardContent from '@material-ui/core/CardContent';\nimport { CardContent, Grid, IconButton, Typography } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport MoviesStore from '../store/moviesStore';\nimport actionsTypes from '../store/actionsTypes';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: 'flex',\n  },\n  cover: {\n    width: 80,\n    height: 130,\n  },\n}));\n\nfunction NominationItem({ movie }) {\n  const classes = useStyles();\n  const { dispatch } = useContext(MoviesStore);\n  function deleteFromNominate() {\n    dispatch({\n      type: actionsTypes.REMOVE_FROM_NOMINATION,\n      payload: movie.imdbID,\n    });\n  }\n  return (\n    <Card className={classes.root}>\n      <Grid container>\n        <Grid item xs={8}>\n          <CardContent>\n            <Typography component=\"h6\">{movie.Title}</Typography>\n            {/* <Typography variant=\"subtitle1\" color=\"textSecondary\">\n              {movie.Year}\n            </Typography> */}\n          </CardContent>\n          <IconButton\n            aria-label=\"delete\"\n            className={classes.margin}\n            onClick={deleteFromNominate}\n          >\n            <DeleteIcon fontSize=\"large\" />\n          </IconButton>\n        </Grid>\n\n        <Grid item xs={4}>\n          <CardMedia\n            className={classes.cover}\n            image={movie.Poster}\n            title=\"Live from space album cover\"\n          />\n        </Grid>\n      </Grid>\n    </Card>\n  );\n}\n\nNominationItem.propTypes = {\n  movie: PropTypes.shape({\n    Title: PropTypes.string.isRequired,\n    // Year: PropTypes.string.isRequired,\n    imdbID: PropTypes.string.isRequired,\n    // Type: PropTypes.string.isRequired,\n    Poster: PropTypes.string.isRequired,\n  }),\n};\n\nNominationItem.defaultProps = {\n  movie: {\n    Title: 'NOT A MOVIE',\n    Year: '2010',\n    imdbID: '000000000',\n    Type: 'movie',\n    Poster: '',\n  },\n};\n\nexport default NominationItem;\n","import { Grid } from '@material-ui/core';\nimport React, { useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport NominationItem from '../components/NominationItem';\nimport MoviesStore from '../store/moviesStore';\n\nconst useStyles = makeStyles(() => ({\n  div: {\n    textAlign: 'center',\n    fontFamily: '\"Gill Sans\", sans-serif;',\n    animation: '$fade-in-down 0.5s ease-out',\n  },\n  h1: {\n    fontFamily: '\"Gill Sans\", sans-serif;',\n    animation: '$fade-in-down 0.5s ease-out',\n  },\n  movie: {\n    animation: '$fade-in-down 0.5s ease-out',\n  },\n  '@keyframes fade-in-down': {\n    '0%': {\n      opacity: '0',\n      transform: 'translateY(-10px)',\n    },\n    '100%': {\n      opacity: '1',\n      transform: 'translateY(0)',\n    },\n  },\n}));\nexport default function NominationContainer() {\n  const classes = useStyles();\n  const { state } = useContext(MoviesStore);\n\n  return (\n    <Grid container spacing={2}>\n      <h1 className={classes.h1}>Nominated Movies</h1>\n      {!state.nominationList.length < 1 ? (\n        state.nominationList.map((movie) => (\n          <Grid className={classes.movie} key={movie.Poster} item xs={12}>\n            <NominationItem movie={movie} />\n          </Grid>\n        ))\n      ) : (\n        <Grid item xs={12}>\n          <h3 className={classes.div}>No Movies</h3>\n        </Grid>\n      )}\n    </Grid>\n  );\n}\n","import { useContext, useCallback } from 'react';\nimport axios from 'axios';\nimport MoviesStore from '../store/moviesStore';\nimport actionsTypes from '../store/actionsTypes';\n\nconst API_KEY = '3d85689c';\n\nfunction useFetch(searchWord) {\n  const { dispatch } = useContext(MoviesStore);\n\n  const searchMovies = useCallback(() => {\n    const setLoading = (value) => {\n      dispatch({\n        type: actionsTypes.SET_LOADING,\n        payload: value,\n      });\n    };\n\n    setLoading(true);\n    axios\n      .get(`https://www.omdbapi.com/?s=${searchWord}&apikey=${API_KEY}`)\n      .then((data) => {\n        dispatch({\n          type: actionsTypes.SET_MOVIES,\n          payload: data.data.Search,\n        });\n      })\n      .catch((err) => {\n        throw err;\n      })\n      .finally(() => setLoading(false));\n  }, [dispatch, searchWord]);\n\n  // useEffect(() => {\n  //   searchMovies();\n  // }, [searchMovies]);\n  return searchMovies;\n}\n\nexport default useFetch;\n","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport { Button } from '@material-ui/core';\nimport debounce from 'lodash/debounce';\nimport useFetch from '../hooks/useFetch';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '70ch',\n    },\n  },\n}));\nfunction SearchInput() {\n  const classes = useStyles();\n\n  const [input, setInput] = useState('');\n  function handleInput(e) {\n    setInput(e.target.value);\n  }\n\n  const searchMovie = useFetch(input);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    searchMovie();\n  }\n\n  useEffect(() => {\n    const fetchSearchResults = debounce(() => {\n      if (!input) return;\n      searchMovie();\n    }, 500);\n\n    fetchSearchResults();\n    return () => fetchSearchResults.cancel();\n  }, [input, searchMovie]);\n\n  return (\n    <div>\n      <form\n        className={classes.root}\n        noValidate\n        autoComplete=\"off\"\n        onSubmit={handleSubmit}\n      >\n        <TextField\n          id=\"filled-basic\"\n          label=\"Search\"\n          variant=\"filled\"\n          onChange={handleInput}\n          value={input}\n        />\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          type=\"submit\"\n          style={{ width: '100px' }}\n        >\n          Search\n        </Button>\n      </form>\n    </div>\n  );\n}\n\nexport default SearchInput;\n","import React from 'react';\nimport Skeleton from 'react-loading-skeleton';\n\nconst SkeletonLoader = () => {\n  const loaders = [];\n  for (let index = 0; index < 8; index += 1) {\n    loaders.push(<Skeleton width=\"100%\" height={100} />);\n  }\n  return <div className=\"skeleton-loader\">{loaders}</div>;\n};\n\nexport default SkeletonLoader;\n","import React, { useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport PropTypes from 'prop-types';\nimport MoviesStore from '../store/moviesStore';\nimport actionsTypes from '../store/actionsTypes';\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 240,\n    animation: 'fade-in-down 0.5s ease-out ',\n    margin: '10px',\n  },\n  '@keyframes fade-in-down': {\n    '0%': {\n      opacity: '0',\n      transform: 'translateY(-10px)',\n    },\n    '100%': {\n      opacity: '1',\n      transform: 'translateY(0)',\n    },\n  },\n});\nfunction MovieCard({ imdbID, Poster, Title }) {\n  const classes = useStyles();\n  const { state, dispatch } = useContext(MoviesStore);\n  const imdbIDs = state.nominationList.map((m) => m.imdbID);\n  function handleNominate() {\n    if (!imdbIDs.includes(imdbID)) {\n      dispatch({\n        type: actionsTypes.ADD_TO_NOMINATION,\n        payload: { Poster, Title, imdbID },\n      });\n    } else {\n      dispatch({\n        type: actionsTypes.REMOVE_FROM_NOMINATION,\n        payload: imdbID,\n      });\n    }\n  }\n  return (\n    <Card className={classes.root}>\n      <CardActionArea>\n        <CardMedia\n          component=\"img\"\n          alt=\"Contemplative Reptile\"\n          // height=\"140\"\n          image={`${Poster}`}\n          title=\"Contemplative Reptile\"\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            {Title}\n          </Typography>\n          {/* <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n        Lizards are a widespread group of squamate reptiles, with over 6,000\n        species, ranging across all continents except Antarctica\n      </Typography> */}\n        </CardContent>\n      </CardActionArea>\n      <CardActions>\n        <Button size=\"small\" color=\"primary\" onClick={handleNominate}>\n          {!imdbIDs.includes(imdbID) ? 'nominate' : 'remove'}\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n\nexport default MovieCard;\nMovieCard.propTypes = {\n  Poster: PropTypes.string,\n  Title: PropTypes.string,\n  imdbID: PropTypes.string,\n};\n\nMovieCard.defaultProps = {\n  Poster: '',\n  Title: '',\n  imdbID: '',\n};\n","import React, { useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport SkeletonLoader from './SkeletonLoader';\n\nimport MovieCard from './MovieCard';\nimport MoviesStore from '../store/moviesStore';\n\nconst useStyles = makeStyles(() => ({\n  div: {\n    display: 'flex',\n    width: '100%',\n    flexWrap: 'wrap',\n  },\n}));\nexport default function ResultList() {\n  const classes = useStyles();\n  const { state } = useContext(MoviesStore);\n\n  return (\n    <div className={classes.div}>\n      {!state.isLoading ? (\n        state.movies.map((movie) => (\n          <MovieCard\n            key={movie.imdbID}\n            imdbID={movie.imdbID}\n            Title={movie.Title}\n            Poster={movie.Poster}\n          />\n        ))\n      ) : (\n        <SkeletonLoader />\n      )}\n    </div>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport SearchInput from '../components/SearchInput';\nimport ResultList from '../components/ResultList';\n\nconst useStyles = makeStyles(() => ({\n  div: {\n    display: 'flex',\n  },\n}));\nfunction SearchList() {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <SearchInput />\n      <div className={classes.div}>\n        <ResultList />\n      </div>\n    </div>\n  );\n}\n\nexport default SearchList;\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MoviesProvider from './store/MoviesProvider';\nimport NominationContainer from './containers/NominationContainer';\nimport SearchList from './containers/SearchList';\n\nconst useStyles = makeStyles(() => ({\n  h1: {\n    textAlign: 'center',\n    fontFamily: '\"Gill Sans\", sans-serif;',\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  return (\n    <MoviesProvider>\n      <h1 className={classes.h1}>Search For Movie and Nominate It</h1>\n      <Container>\n        <Grid container>\n          <Grid item md={5} sm={6} xs={12}>\n            <NominationContainer />\n          </Grid>\n          <Grid item md={7} sm={6} xs={12}>\n            <SearchList />\n          </Grid>\n        </Grid>\n      </Container>\n    </MoviesProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}